/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type AirdropInitialized = {
  airdrop: Address;
  mint: Address;
  authority: Address;
  controller: Address;
  controllerFeeVault: Address;
  merkleRoot: Array<number>;
  startTime: bigint;
  endTime: bigint;
  timestamp: bigint;
};

export type AirdropInitializedArgs = {
  airdrop: Address;
  mint: Address;
  authority: Address;
  controller: Address;
  controllerFeeVault: Address;
  merkleRoot: Array<number>;
  startTime: number | bigint;
  endTime: number | bigint;
  timestamp: number | bigint;
};

export function getAirdropInitializedEncoder(): Encoder<AirdropInitializedArgs> {
  return getStructEncoder([
    ['airdrop', getAddressEncoder()],
    ['mint', getAddressEncoder()],
    ['authority', getAddressEncoder()],
    ['controller', getAddressEncoder()],
    ['controllerFeeVault', getAddressEncoder()],
    ['merkleRoot', getArrayEncoder(getU8Encoder(), { size: 32 })],
    ['startTime', getI64Encoder()],
    ['endTime', getI64Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getAirdropInitializedDecoder(): Decoder<AirdropInitialized> {
  return getStructDecoder([
    ['airdrop', getAddressDecoder()],
    ['mint', getAddressDecoder()],
    ['authority', getAddressDecoder()],
    ['controller', getAddressDecoder()],
    ['controllerFeeVault', getAddressDecoder()],
    ['merkleRoot', getArrayDecoder(getU8Decoder(), { size: 32 })],
    ['startTime', getI64Decoder()],
    ['endTime', getI64Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getAirdropInitializedCodec(): Codec<
  AirdropInitializedArgs,
  AirdropInitialized
> {
  return combineCodec(
    getAirdropInitializedEncoder(),
    getAirdropInitializedDecoder()
  );
}
